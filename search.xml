<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JDBC]]></title>
    <url>%2F2019%2F01%2F22%2Fjdbc%2F</url>
    <content type="text"><![CDATA[JDBC JAVA Database Connectivity java 数据库连接 为什么会出现JDBC SUN公司提供的一种数据库访问规则、规范, 由于数据库种类较多，并且java语言使用比较广泛，sun公司就提供了一种规范，让其他的数据库提供商去实现底层的访问规则。 我们的java程序只要使用sun公司提供的jdbc驱动即可。 使用JDBC的基本步骤 注册驱动 DriverManager.registerDriver(new com.mysql.jdbc.Driver()); 建立连接 //DriverManager.getConnection(&quot;jdbc:mysql://localhost/test?user=monty&amp;password=greatsqldb&quot;); //2. 建立连接 参数一： 协议 + 访问的数据库 ， 参数二： 用户名 ， 参数三： 密码。 conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost/student&quot;, &quot;root&quot;, &quot;root&quot;); 创建statement //3. 创建statement ， 跟数据库打交道，一定需要这个对象 st = conn.createStatement(); 执行sql ，得到ResultSet //4. 执行查询 ， 得到结果集 String sql = &quot;select * from t_stu&quot;; rs = st.executeQuery(sql); 遍历结果集 //5. 遍历查询每一条记录 while(rs.next()){ int id = rs.getInt(&quot;id&quot;); String name = rs.getString(&quot;name&quot;); int age = rs.getInt(&quot;age&quot;); System.out.println(&quot;id=&quot;+id + &quot;===name=&quot;+name+&quot;==age=&quot;+age); } 释放资源 if (rs != null) { try { rs.close(); } catch (SQLException sqlEx) { } // ignore rs = null; } ... JDBC 工具类构建 资源释放工作的整合 驱动防二次注册 DriverManager.registerDriver(new com.mysql.jdbc.Driver()); Driver 这个类里面有静态代码块，一上来就执行了，所以等同于我们注册了两次驱动。 其实没这个必要的。 //静态代码块 ---&gt; 类加载了，就执行。 java.sql.DriverManager.registerDriver(new Driver()); 最后形成以下代码即可。 Class.forName(&quot;com.mysql.jdbc.Driver&quot;); 使用properties配置文件 在src底下声明一个文件 xxx.properties ，里面的内容如下： driverClass=com.mysql.jdbc.Driver url=jdbc:mysql://localhost/student name=root password=root 在工具类里面，使用静态代码块，读取属性 static{ try { //1. 创建一个属性配置对象 Properties properties = new Properties(); InputStream is = new FileInputStream(&quot;jdbc.properties&quot;); //对应文件位于工程根目录 //使用类加载器，去读取src底下的资源文件。 后面在servlet //对应文件位于src目录底下 //InputStream is = JDBCUtil.class.getClassLoader().getResourceAsStream(&quot;jdbc.properties&quot;); //导入输入流。 properties.load(is); //读取属性 driverClass = properties.getProperty(&quot;driverClass&quot;); url = properties.getProperty(&quot;url&quot;); name = properties.getProperty(&quot;name&quot;); password = properties.getProperty(&quot;password&quot;); } catch (Exception e) { e.printStackTrace(); } } ​ 数据库的CRUD sql insert 1INSERT INTO t_stu (NAME , age) VALUES (&apos;wangqiang&apos;,28) INSERT INTO t_stu VALUES (NULL,&apos;wangqiang2&apos;,28) // 1. 获取连接对象 conn = JDBCUtil.getConn(); // 2. 根据连接对象，得到statement st = conn.createStatement(); //3. 执行添加 String sql = &quot;insert into t_stu values(null , &apos;aobama&apos; , 59)&quot;; //影响的行数， ，如果大于0 表明操作成功。 否则失败 int result = st.executeUpdate(sql); if(result &gt;0 ){ System.out.println(&quot;添加成功&quot;); }else{ System.out.println(&quot;添加失败&quot;); } delete 1DELETE FROM t_stu WHERE id = 6 // 1. 获取连接对象 conn = JDBCUtil.getConn(); // 2. 根据连接对象，得到statement st = conn.createStatement(); //3. 执行添加 String sql = &quot;delete from t_stu where name=&apos;aobama&apos;&quot;; //影响的行数， ，如果大于0 表明操作成功。 否则失败 int result = st.executeUpdate(sql); if(result &gt;0 ){ System.out.println(&quot;删除成功&quot;); }else{ System.out.println(&quot;删除失败&quot;); } query 1SELECT * FROM t_stu // 1. 获取连接对象 conn = JDBCUtil.getConn(); // 2. 根据连接对象，得到statement st = conn.createStatement(); // 3. 执行sql语句，返回ResultSet String sql = &quot;select * from t_stu&quot;; rs = st.executeQuery(sql); // 4. 遍历结果集 while (rs.next()) { String name = rs.getString(&quot;name&quot;); int age = rs.getInt(&quot;age&quot;); System.out.println(name + &quot; &quot; + age); } update 1UPDATE t_stu SET age = 38 WHERE id = 1; // 1. 获取连接对象 conn = JDBCUtil.getConn(); // 2. 根据连接对象，得到statement st = conn.createStatement(); //3. 执行添加 String sql = &quot;update t_stu set age = 26 where name =&apos;qyq&apos;&quot;; //影响的行数， ，如果大于0 表明操作成功。 否则失败 int result = st.executeUpdate(sql); if(result &gt;0 ){ System.out.println(&quot;更新成功&quot;); }else{ System.out.println(&quot;更新失败&quot;); } 使用单元测试，测试代码 定义一个类， TestXXX , 里面定义方法 testXXX. 添加junit的支持。 右键工程 --- add Library --- Junit --- Junit4 在方法的上面加上注解 ， 其实就是一个标记。 @Test public void testQuery() { ... } 光标选中方法名字，然后右键执行单元测试。 或者是打开outline视图， 然后选择方法右键执行。 Dao模式 Data Access Object 数据访问对象 新建一个dao的接口， 里面声明数据库访问规则 /** * 定义操作数据库的方法 */ public interface UserDao { /** * 查询所有 */ void findAll(); } 新建一个dao的实现类，具体实现早前定义的规则 public class UserDaoImpl implements UserDao{ @Override public void findAll() { Connection conn = null; Statement st = null; ResultSet rs = null; try { //1. 获取连接对象 conn = JDBCUtil.getConn(); //2. 创建statement对象 st = conn.createStatement(); String sql = &quot;select * from t_user&quot;; rs = st.executeQuery(sql); while(rs.next()){ String userName = rs.getString(&quot;username&quot;); String password = rs.getString(&quot;password&quot;); System.out.println(userName+&quot;=&quot;+password); } } catch (Exception e) { e.printStackTrace(); }finally { JDBCUtil.release(conn, st, rs); } } } 直接使用实现 @Test public void testFindAll(){ UserDao dao = new UserDaoImpl(); dao.findAll(); } Statement安全问题 Statement执行 ，其实是拼接sql语句的。 先拼接sql语句，然后在一起执行。 String sql = &quot;select * from t_user where username=&apos;&quot;+ username +&quot;&apos; and password=&apos;&quot;+ password +&quot;&apos;&quot;; UserDao dao = new UserDaoImpl(); dao.login(&quot;admin&quot;, &quot;100234khsdf88&apos; or &apos;1=1&quot;); SELECT * FROM t_user WHERE username=&apos;admin&apos; AND PASSWORD=&apos;100234khsdf88&apos; or &apos;1=1&apos; 前面先拼接sql语句， 如果变量里面带有了 数据库的关键字，那么一并认为是关键字。 不认为是普通的字符串。 rs = st.executeQuery(sql); PrepareStatement 该对象就是替换前面的statement对象。 相比较以前的statement， 预先处理给定的sql语句，对其执行语法检查。 在sql语句里面使用 ? 占位符来替代后续要传递进来的变量。 后面进来的变量值，将会被看成是字符串，不会产生任何的关键字。 String sql = &quot;insert into t_user values(null , ? , ?)&quot;; ps = conn.prepareStatement(sql); //给占位符赋值 从左到右数过来，1 代表第一个问号， 永远你是1开始。 ps.setString(1, userName); ps.setString(2, password); ​ 总结： JDBC入门 抽取工具类 Statement CRUD 演练crud Dao模式 声明与实现分开 PrepareStament CRUD 预处理sql语句，解决上面statement出现的问题 小练习：1. dao里面声明 增删查改， 以及登录的方法 登录方法 ： 要求，成功后返回该用户的所有信息。 字段不限。 查询： 如果是findAll. 肯定是返回一个集合 List&lt;User&gt; 增加 &amp; 删除 &amp; 更新 返回影响的行数即可 int类型]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BootStrap]]></title>
    <url>%2F2019%2F01%2F22%2Fbootstrap%2F</url>
    <content type="text"><![CDATA[BootStrap 目标使用JQuery发送请求局部刷新页面使用BootStrap制作一个响应式的页面使用BootStrap制作网站的首页主要掌握掌握什么是响应式及响应式的原理掌握BootStrap的栅格系统了解BootStrap的其他组件及JS控件上次课内容: 什么JQ : write less do more 写更少的代码,做更多的事情 javascript函数库 基本选择器: ​ ID选择器: #ID名称 ​ 类选择器: .类名 ​ 元素选择器: 元素的名称 ​ 通配符选择器: * 找出页面上所有元素 ​ 选择器分组: 选择器1,选择器2 [选择器1 , 选择器2] 层级选择器: ​ 后代选择器: 选择器1 选择器2 找出来的选择器1 下面的所有选择器2 子孙 ​ 子元素选择器: 选择器1 &gt; 选择器2 找出来的是所有的子节点 儿子 ​ 相邻兄弟选择器: 选择器1+选择器2 找出来的紧挨着自己的弟弟 ​ 兄弟选择器: 选择器1~选择器2 找出所有的弟弟 ​ (找出所有兄弟: $(“div”).siblings() ) 属性选择器: 1234选择器 div选择器[title]选择器[title='test']选择器[title='test'][style] 基本的过滤器: 选择器:过滤器 $(“div:first”) ​ :first : 找出第一个元素 ​ :last 找出最后一个元素 ​ :even 找出偶数索引 ​ :odd 找出奇数 ​ :gt(index) greater-than大于 ​ :lt(index) 小于 ​ :eq(index) 等于 表单选择器: ​ :input 找出所有的输入项, textarea select button ​ :password ​ :text ​ :radio 表单对象属性的过滤器 ​ :selected ​ :checked 常用函数: ​ 属性prop() properties ​ 如果传入一个参数 就是获取 ​ prop(“src”,”../img/1.jpg”); ​ 设置图片路径 ​ attr : 操作一些自定义的属性 ​ prop: 通常是用来操作元素固有属性的 ,建议大家使用prop来操作属性 ​ css() ; 修改css样式 ​ addClass() : 添加一个class样式 ​ removeClass() : 移除 ​ ​ blur : 绑定失去焦点 ​ focus: 绑定获得焦点事件 ​ click: ​ dblclick ​ change ​ ​ append : 给自己添加儿子 ​ appendTo : 把自己添加到别人家 ​ prepend : 在自己子节点最前面添加子节点 ​ after : 在自己后面添加一个兄弟 ​ before: 在自己前面添加一个兄弟 ​ ​ $(“数组对象”).each(function(index,data)) ​ $.each(arr,function(index,data)) ​ 表单校验案例技术分析 trigger : 触发事件,但是会执行类似浏览将光标移到输入框内的这种浏览器默认行为 triggerHandler : 仅仅只会触发事件所对应的函数 is() 步骤分析 首先给必填项,添加尾部添加一个小红点 获取用户输入的信息,做相应的校验 事件: 获得焦点, 失去焦点, 按键抬起 表单提交的事件 代码实现12 使用JQuery发送请求局部刷新页面​ 数据交换格式: ​ json ​ xml ​ 什么是JSON JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它基于ECMAScript的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C、C++、C#、Java、JavaScript、Perl、Python等）。这些特性使JSON成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成(一般用于提升网络传输速率)。 JSON格式 ​ JSON对象 12&#123; key1:value&#125; &#123;"username":"zhangsan","password":"123"&#125; ​ JSON数组 1[&#123; key1:value&#125;,&#123; key1:value&#125;,&#123; key1:value&#125;] ​ 使用BootStrap开发一个响应式的页面出来需求分析开发一套响应式页面.让他能够在各种设备上显示正常,提升用户体验 技术分析BootStap概述 什么是BootStrap ​ BootStrap有什么作用 复制粘贴, 能够提高开发人员的工作效率 什么是响应式页面 适应不同的分辨率显示不同样式,提高用户的体验 ​ BootStrap的中文网 http://www.bootcss.com 下载BootStrap BootStrap结构 全局CSS bootStrap中已经定义好了一套CSS的样式表 组件 BootStrap定义的一套按钮,导航条等组件 JS插件 BootStrap定义了一套JS的插件,这些插件已经默认实现了很多种效果 BootStrap的入门开发 引入相关的头文件 12345678910&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;&lt;link rel="stylesheet" href="../css/bootstrap.css" /&gt;&lt;!--需要引入JQuery--&gt;&lt;script type="text/javascript" src="../js/jquery-1.11.0.js" &gt;&lt;/script&gt;&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;&lt;script type="text/javascript" src="../js/bootstrap.js" &gt;&lt;/script&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; BootStrap的布局容器 .container 类用于固定宽度并支持响应式布局的容器。 123&lt;div class=&quot;container&quot;&gt; ...&lt;/div&gt; .container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。 123&lt;div class=&quot;container-fluid&quot;&gt; ...&lt;/div&gt; 校验表单扩展: trigger : 触发浏览器默认行为 triggerHandler : 不会触发 is : 判断 find : 查找 老黄历: 什么json: 轻量级的数据交换格式 json对象: {“username”:”zhangsan”} json数组: [ {“username”:”zhangsan”}, {“username”:”zhangsan”}, {“username”:”zhangsan”}] ajax异步请求: ​ 同步和异步 row Bootstrap 栅格系统的工作原理： “行（row）”必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。 通过“行（row）”在水平方向创建一组“列（column）”。 你的内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。 类似 .row 和 .col-xs-4 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。 通过为“列（column）”设置 padding 属性，从而创建列与列之间的间隔（gutter）。通过为 .row 元素设置负值 margin 从而抵消掉为 .container 元素设置的 padding，也就间接为“行（row）”所包含的“列（column）”抵消掉了padding ​ BootStrap的栅格系统 响应式设计: 这种设计依赖于CSS3中的媒体查询 栅格样式: 设备分辨率大于1200 使用lg样式 设备分辨率大于992 &lt; 1200 使用md样式 设备分辨率大于768 &lt; 992 使用sm样式 设备分辨率小于768使用xs样式 BootStrap的全局CSS 定义了一套CSS 对页面中的元素进行定义 列表元素,表单,按钮,图片… 步骤分析代码实现使用BootStrap布局网站首页需求分析请使用BootStrap对我们的首页进行优化 技术分析步骤分析 新建一个HTML页面.引入bootStrap相关的js和CSS 定义一个整体的div, 将整体的div分成8个部分 完成没部分的内容显示 代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;!-- 准备工作: &lt;meta name='viewport'&gt; 1.导入bootstrap css文件 2.导入JQuery 3.bootstrap.js 4.写一个div class = container 支持响应式的布局容器 --&gt; &lt;link rel="stylesheet" href="../css/bootstrap.min.css"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; &lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入 --&gt; &lt;script src="../js/jquery-1.11.0.js"&gt;&lt;/script&gt; &lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt; &lt;script src="../js/bootstrap.min.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class="container"&gt; &lt;div class="row"&gt; &lt;div class="col-md-4"&gt; &lt;img src="../img/logo2.png" /&gt; &lt;/div&gt; &lt;div class="col-md-4 hidden-xs"&gt; &lt;img src="../img/header.png" /&gt; &lt;/div&gt; &lt;div class="col-md-4"&gt; &lt;a href="#"&gt;登录&lt;/a&gt; &lt;a href="#"&gt;注册&lt;/a&gt; &lt;a href="#"&gt;购物车&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--菜单--&gt; &lt;div class="row"&gt; &lt;div class="col-md-12"&gt; &lt;nav class="navbar navbar-inverse" role="navigation"&gt; &lt;div class="container-fluid"&gt; &lt;!-- Brand and toggle get grouped for better mobile display --&gt; &lt;div class="navbar-header"&gt; &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"&gt; &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class="navbar-brand" href="#"&gt;首页&lt;/a&gt; &lt;/div&gt; &lt;!-- Collect the nav links, forms, and other content for toggling --&gt; &lt;div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"&gt; &lt;ul class="nav navbar-nav"&gt; &lt;li class="active"&gt; &lt;a href="#"&gt;手机数码&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;鞋靴箱包&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;电脑办公&lt;/a&gt; &lt;/li&gt; &lt;li class="dropdown"&gt; &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown"&gt;所有分类 &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu" role="menu"&gt; &lt;li&gt; &lt;a href="#"&gt;手机数码&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;鞋靴箱包&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;电脑办公&lt;/a&gt; &lt;/li&gt; &lt;li class="divider"&gt;&lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;Separated link&lt;/a&gt; &lt;/li&gt; &lt;li class="divider"&gt;&lt;/li&gt; &lt;li&gt; &lt;a href="#"&gt;One more separated link&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;form class="navbar-form navbar-right" role="search"&gt; &lt;div class="form-group"&gt; &lt;input type="text" class="form-control" placeholder="请输入要搜索的商品"&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;搜索&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;!-- /.navbar-collapse --&gt; &lt;/div&gt; &lt;!-- /.container-fluid --&gt; &lt;/nav&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div id="carousel-example-generic" class="carousel slide" data-ride="carousel"&gt; &lt;!-- Indicators --&gt; &lt;ol class="carousel-indicators"&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="0" class="active"&gt;&lt;/li&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="1"&gt;&lt;/li&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="2"&gt;&lt;/li&gt; &lt;/ol&gt; &lt;!-- Wrapper for slides --&gt; &lt;div class="carousel-inner" role="listbox"&gt; &lt;div class="item active"&gt; &lt;img src="../img/1.jpg" alt="..."&gt; &lt;div class="carousel-caption"&gt; ... &lt;/div&gt; &lt;/div&gt; &lt;div class="item"&gt; &lt;img src="../img/2.jpg" alt="..."&gt; &lt;div class="carousel-caption"&gt; ... &lt;/div&gt; &lt;/div&gt; &lt;div class="item"&gt; &lt;img src="../img/3.jpg" alt="..."&gt; &lt;div class="carousel-caption"&gt; ... &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- Controls --&gt; &lt;a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev"&gt; &lt;span class="glyphicon glyphicon-chevron-left"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;Previous&lt;/span&gt; &lt;/a&gt; &lt;a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next"&gt; &lt;span class="glyphicon glyphicon-chevron-right"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;Next&lt;/span&gt; &lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;!--最新商品这里--&gt; &lt;div class="row"&gt; &lt;div class="col-md-12"&gt; &lt;h3&gt;最新商品&lt;img src="../images/title2.jpg"/&gt;&lt;/h3&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--商品部分 --&gt; &lt;div class="row"&gt; &lt;!--左边div--&gt; &lt;div class="col-md-2 hidden-sm hidden-xs"&gt; &lt;img src="../products/hao/big01.jpg" width="100%" height="100%" /&gt; &lt;/div&gt; &lt;!--右边div--&gt; &lt;div class="col-md-10"&gt; &lt;!--上面部分--&gt; &lt;div class="row"&gt; &lt;!--中等广告图--&gt; &lt;div class="col-md-6"&gt; &lt;img src="../products/hao/middle01.jpg" width="100%" /&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--下面部分--&gt; &lt;div class="row"&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="row"&gt; &lt;div class="col-md-12"&gt; &lt;img src="../products/hao/ad.jpg" width="100%" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--最新商品这里--&gt; &lt;div class="row"&gt; &lt;div class="col-md-12"&gt; &lt;h3&gt;最新商品&lt;img src="../images/title2.jpg"/&gt;&lt;/h3&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--商品部分 --&gt; &lt;div class="row"&gt; &lt;!--左边div--&gt; &lt;div class="col-md-2 hidden-sm hidden-xs"&gt; &lt;img src="../products/hao/big01.jpg" width="100%" height="100%" /&gt; &lt;/div&gt; &lt;!--右边div--&gt; &lt;div class="col-md-10"&gt; &lt;!--上面部分--&gt; &lt;div class="row"&gt; &lt;!--中等广告图--&gt; &lt;div class="col-md-6"&gt; &lt;img src="../products/hao/middle01.jpg" width="100%" /&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--下面部分--&gt; &lt;div class="row"&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;!--商品项--&gt; &lt;div class="col-md-2 col-xs-4" style="text-align: center;"&gt; &lt;img src="../products/hao/small01.jpg" /&gt; &lt;p&gt;豆浆机&lt;/p&gt; &lt;p&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--页脚广告--&gt; &lt;div&gt; &lt;img src="../image/footer.jpg" width="100%" /&gt; &lt;/div&gt; &lt;!--网站声明--&gt; &lt;div style="text-align: center;"&gt; &lt;a href="http://www.itheima.com"&gt;关于我们&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;联系我们&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;招贤纳士&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;法律声明&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;友情链接&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;支付方式&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;配送方式&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;服务声明&lt;/a&gt; &lt;a href="http://www.itheima.com"&gt;广告声明&lt;/a&gt; &lt;br /&gt; Copyright © 2005-2016 版权所有 &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 五天前端内容总结 JQ方式校验表单(要求做出来) json : (了解) json对象 {} json数组 [{},{}] $.get(url,function(data){}) (了解) bootstrap: Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。 全局CSS样式: css样式 栅格系统: 将屏幕划分成12个格子,12列 class=’row’ 当前是行 行里面放的是列 col-屏幕分辨率-数字 (每一种分辨率后的数字总和必须是等于12,如果超过12,另起一行) col-lg-数字: 在超宽屏幕上使用 col-md-数字: 在中等屏幕上,PC电脑 col-sm-数字: 在平板电脑上 col-xs-数字: 在手机上 组件: 导航条 , 进度条, 字体 javascript插件 : 轮播图 复制粘贴 什么是响应式: 会根据不同的分辨率去显示不同页面结构,提高用户体验 HTML: 超文本标记语言: 设计网页,决定了网页的结构 CSS: 层叠样式表 ,主要是用来美化页面, 将美化和HTML代码进行分离,提高代码复用性 javascript: 脚本语言,由浏览器解释执行, 弱类型语言(var i), 提供用户交互 jquery: javascript函数库,进一步的封装 选择器: ID选择器 类选择器 元素选择器 通配符选择器 选择器分组 层级选择器 后代选择器 子元素选择器 相邻兄弟选择器 兄弟选择器 : 找出所有的弟弟 属性选择器: 选择器[属性名称=’属性的值’] 表单选择器 :input :text :password body &gt; div &gt; div:nth-child(7) &gt; div:nth-child(3) &gt; div:nth-child(8) 基本的过滤器 :first :last :even :odd :gt :lt :eq 表单对象属性 :selected :checked]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>BootStrap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JQuery]]></title>
    <url>%2F2019%2F01%2F22%2Fjquery%2F</url>
    <content type="text"><![CDATA[JQuery 目标使用JQuery完成页面定时弹出广告定时器: ​ setInterval clearInterval ​ setTimeout clearTimeout 显示: img.style.display = “block” 隐藏: img.style.display = “none” img 对象 ​ style属性: style对象 使用JQuery完成表格的隔行换色获得所有的行 ​ table.rows[] 修改行的颜色 ​ row.bgColor =”red” ​ row.style.backgroundColor = “black” ​ row.style.background = “red” ​ “background-color:red” ​ “background:red” 使用JQuery完成复选框的全选效果checked属性 如何获取所有复选框: ​ document.getElementsByName get Elements By Name 数据库里面 使用JQuery完成省市联动效果​ JS中的数组: [“城市”] ​ new Array() ​ DOM树操作: ​ 创建节点: document.createElement ​ 创建文本节点: document.createTextNode ​ 添加节点: appendChild 使用JQuery完成下列列表左右选择​ select下拉列表 ​ multiple 允许多选 ​ ondblclick : 双击事件 ​ for循环遍历,一边遍历一边移除出现的问题 使用JQuery完成表单的校验(扩展)​ 事件: ​ 获得焦点事件: onfocus ​ 失去焦点事件: onblur ​ 按键抬起事件: onkeyup ​ 鼠标移入: onmouseenter ​ 鼠标移出: onmouseout ​ JS引入外部文件 : script 今日目标：掌握JQuery的基本使用掌握JQuery的基本选择器,层次选择器会使用JQuery完成DOM的基本操作1. 使用JQuery完成页面定时弹出广告1.1 需求分析：当用户打开界面，3秒钟之后弹出广告，这个广告显示5秒钟，隐藏广告 1.2 技术分析定时器: setTimeout 显示和隐藏: style.display = “block/none” 什么JQuery: jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。 jQuery的核心特性可以总结为：具有独特的链式语法和短小清晰的多功能接口；具有高效灵活的css选择器，并且可对CSS选择器进行扩展；拥有便捷的插件扩展机制和丰富的插件。jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等 JQuery的作用: ​ 1. 写更少的代码,做更多的事情: write Less ,Do more 2. 将我们页面的JS代码和HTML页面代码进行分离 为什么学习JQuery: ​ 提高我们的工作效率 JQ的入门 1234567891011121314151617181920212223242526272829&lt;script&gt; //js文档加载完成的事件 window.onload = function()&#123; alert("window.onload 111"); &#125; window.onload = function()&#123; alert("window.onload 222"); &#125; /*文档加载完成的事件*/ jQuery(document).ready(function()&#123; alert("jQuery(document).ready(function()"); &#125;); /* jQuery 简写成 $ */ $(document).ready(function()&#123; alert("$(document).ready(function()"); &#125;); /* 最简单的写法 */ $(function()&#123; alert("$(function()&#123;"); &#125;); &lt;/script&gt; 【JQ中根据ID查找元素】 1234全都是根据选择器去找的#ID&#123;&#125;.类名&#123;&#125;$("#ID的名称") 【JQ和JS之间的转换】 JQ对象,只能调用JQ的属性和方法 JS对象 只能调用JS的属性和方法 12345678910111213141516171819function changeJS()&#123; var div = document.getElementById("div1");// div.innerHTML = "JS成功修改了内容" //将JS对象转成JQ对象 $(div).html("转成JQ对象来修改内容") &#125; $(function()&#123; //给按钮绑定事件 $("#btn2").click(function()&#123; //找到div1// $("#div1").html("JQ方式成功修改了内容"); //将JQ对象转成JS对象来调用 var $div = $("#div1");// var jsDiv = $div.get(0); var jsDiv = $div[0]; jsDiv.innerHTML="jq转成JS对象成功"; &#125;); &#125;); JQ的开发步骤: (将我们页面的JS代码和HTML页面代码进行分离) 1. 导入JQ相关的文件 2. 文档加载完成事件: $(function) : 页面初始化的操作: 绑定事件, 启动页面定时器 3. 确定相关操作的事件 4. 事件触发函数 5. 函数里面再去操作相关的元素 显示和隐藏 img.style.display 【JQ中的动画效果】 1234567show()hide()slideUpslideDownfadeInfadeOutanimate : 自定义动画 1.3 步骤分析： 导入JQ的文件 编写JQ的文档加载事件 启动定时器 setTimeout(“”,3000); 编写显示广告的函数 在显示广告里面再启动一个定时器 编写隐藏广告的函数 1.4 代码实现1234567891011121314&lt;script&gt; //显示广告 function showAd()&#123; $("#img1").slideDown(2000); setTimeout("hideAd()",3000); &#125; //隐藏广告 function hideAd()&#123; $("#img1").slideUp(2000); &#125; $(function()&#123; setTimeout("showAd()",3000); &#125;); &lt;/script&gt; JQuery中的选择器让我们能够更加精确找到我们要操作的元素 基本选择器 ID选择器 : #ID的名称 类选择器: 以 . 开头 .类名 元素选择器: 标签的名称 通配符选择器: * 选择器,选择器: 选择器1,选择器2 基本选择器的案例12345678910111213141516171819202122232425262728293031323334&lt;!-- - ID选择器 : #ID的名称 - 类选择器: 以 . 开头 .类名 - 元素选择器: 标签的名称 - 通配符选择器: * - 选择器,选择器: 选择器1,选择器2 --&gt; &lt;script&gt; //文档加载事件,页面初始化的操作 $(function()&#123; //初始化操作: 给按钮绑定事件 $("#btn1").click(function()&#123; $("#two").css("background-color","palegreen"); &#125;); //找出mini类的所有元素 $("#btn2").click(function()&#123; $(".mini").css("background-color","palegreen"); &#125;); $("#btn3").click(function()&#123; $("div").css("background-color","palegreen"); &#125;); $("#btn4").click(function()&#123; $("*").css("background-color","palegreen"); &#125;); /*选择器分组*/ //找出mini类 和 span元素 $("#btn5").click(function()&#123; $(".mini,span").css("background-color","palegreen"); &#125;); &#125;); &lt;/script&gt; JQ中的层级选择器 子元素选择器: 选择器1 &gt; 选择器2 后代选择器: 选择器1 儿孙 相邻兄弟选择器 : 选择器1 + 选择器2 : 找出紧挨着的一个弟弟 找出所有弟弟: 选择器1~ 选择器2 : 找出所有的弟弟 123456789101112131415161718192021&lt;script&gt; //文档加载事件,页面初始化的操作 $(function()&#123; //初始化操作: 给按钮绑定事件 //找出body下面的子div $("#btn1").click(function()&#123; $("body &gt; div").css("background-color","palegreen"); &#125;); //找出body下面的所有div $("#btn2").click(function()&#123; $("body div").css("background-color","palegreen"); &#125;); $("#btn3").click(function()&#123; $("#one+div").css("background-color","palegreen"); &#125;); $("#btn4").click(function()&#123; $("#two~div").css("background-color","palegreen"); &#125;); &#125;); &lt;/script&gt; JQ中的基本过滤器12345678910111213141516171819202122232425&lt;script&gt; $(function()&#123; /&lt;script&gt; //文档加载事件,页面初始化的操作 $(function()&#123; //初始化操作: 给按钮绑定事件 //过滤出所有div中第一个元素 $("#btn1").click(function()&#123; $("div:first").css("background-color","palegreen"); &#125;); //过滤出所有div中偶数位的div $("#btn2").click(function()&#123; $("div:even").css("background-color","palegreen"); &#125;); $("#btn3").click(function()&#123; $("div:odd").css("background-color","palegreen"); &#125;); $("#btn4").click(function()&#123; $("div:gt(2)").css("background-color","palegreen"); &#125;); &#125;);&lt;/script&gt; JQ中的属性选择器123456789101112$(function()&#123; //找到有name属性的input $("#btn1").click(function()&#123; $("input[name]").attr("checked",true); &#125;); $("#btn2").click(function()&#123; $("input[name='accept']").attr("checked",true); &#125;); $("#btn3").click(function()&#123; $("input[name='newsletter'][value='Hot Fuzz']").attr("checked",true); &#125;); &#125;); JQ中的表单过滤器123456&lt;script&gt; //1.文档加载事件 $(function()&#123; $(":text").css("background-color","pink"); &#125;);&lt;/script&gt; 上午的内容回顾: 什么是JQ: write less , do more: 写更少的代码,做更多的事 ​ javascript函数库 1.11版本 定时器: 动画效果: ​ show : 显示 ​ hide : 隐藏 ​ slideDown: ​ slideUp: 向上滑动 ​ fadeIn ​ fadeOut JQ选择器: 基本选择器: ​ ID选择器: #ID的名字 ​ 类选择器: .类名 ​ 元素选择器: 标签名称 ​ 通配符选择器: * ​ 选择器分组: 选择器1,选择器2 层级选择器: ​ 后代选择器: 选择器1 儿孙 ​ 子元素选择器: 选择器1 &gt; 儿子 ​ 相邻兄弟选择器: 选择器1 + 选择器2 找出紧挨着它的弟弟 ​ 所有弟弟选择器: 选择器1~选择器2 找出所有弟弟 基本过滤器: ​ 选择器:first : 找出的是第一个 ​ :last ​ :even 找出索引为偶数 ​ :odd 找出奇数索引 ​ :gt(index) : 大于索引 ​ :lt(index) 小于 ​ :eq(index) 等于 属性选择器: ​ 选择器[href] : 单个属性 12选择器[href][title] : 多个属性选择器[href][title='test'] : 多个属性,包含值 表单过滤器: ​ :input 找出所有输入项: input textarea select ​ :text ​ :password 表单对象属性: ​ 找出select中被选中的那一项: ​ option:selected JQ的开发步骤: 1. 导入JQ相关的包 2. 文档加载文成的事件: 页面初始化: 绑定事件, 启动定时器 3. 确定事件 4. 实现事件索要触发的函数 5. 函数里面再去操作我们要操作的元素 使用JQ完成表格的隔行换色需求分析:在我们的实际开发过程中,我们的表格如果所有的行都是一样的话,很容易看花眼,所以我们需要让我们的表格隔行换色 技术分析:获取所有行 table.rows 遍历所有行 根据行号去修改每一行的背景颜色: bgColor ​ style.backgroundColor = “red” 步骤分析: 导入JQ的包 文档加载完成函数: 页面初始化 获得所有的行 : 元素选择器 根据行号去修改颜色 代码实现:123456789 $(function()&#123; //获得所有的行 : 元素选择器 $("tbody &gt; tr:even").css("background-color","#CCCCCC"); //修改基数行 $("tbody &gt; tr:odd").css("background-color","#FFF38F");// $("tbody &gt; tr").css("background-color","#FFF38F"); &#125;); 使用JQuery完成表单的全选全不选功能需求分析​ 在我们对表格处理的时,有些情况下,我们需要对表格进行批量处理, 技术分析:代码实现:使用JQ完成省市联动效果需求分析:​ 在我们的注册表单中,通常我们需要知道用户的籍贯,需要一个给用选择的项,当用户选中了省份之后,列出省下面所有的城市 技术分析: 准备工作 : 城市信息的数据 添加节点 : appendChild (JS) append : 添加子元素到末尾 appendTo : 给自己找一个爹,将自己添加到别人家里 prepend : 在子元素前面添加 after : 在自己的后面添加一个兄弟 遍历的操作: ​ 步骤分析: 导入JQ的文件 文档加载事件:页面初始化 进一步确定事件: change事件 函数: 得到当前选中省份 得到城市, 遍历城市数据 将遍历出来的城市添加到城市的select中 代码实现:123456789101112131415161718$(function()&#123; $("#province").change(function()&#123;// alert(this.value); //得到城市信息 var cities = provinces[this.value]; //清空城市select中的option /*var $city = $("#city"); //将JQ对象转成JS对象 var citySelect = $city.get(0) citySelect.options.length = 0;*/ $("#city").empty(); //采用JQ的方式清空 //遍历城市数据 $(cities).each(function(i,n)&#123; $("#city").append("&lt;option&gt;"+n+"&lt;/option&gt;"); &#125;); &#125;); &#125;); 使用JQ完成下拉列表左右选择需求分析我们的商品通常包含已经有了的, 还有没有的,现在我们需要有一个页面用于动态编辑这些商品 技术分析步骤分析1. 导入JQ的文件 2. 文档加载函数 :页面初始化 3.确定事件 : 点击事件 onclick 4. 事件触发函数 1. 移动被选中的那一项到右边 代码实现12345678910111213141516&lt;script type="text/javascript" src="../js/jquery-1.11.0.js" &gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; $("#a1").click(function()&#123; //找到被选中的那一项 //将被选中项添加到右边 $("#rightSelect").append($("#leftSelect option:selected")); &#125;); //将左边所有商品移动到右边 $("#a2").click(function()&#123; $("#rightSelect").append($("#leftSelect option")); &#125;); &#125;);&lt;/script&gt; 今天内容总结:定时器 动画效果: show hide slideDown slideUp fadeIn fadeOut animate 基本选择器: ​ ID选择器: #ID名称 ​ 类选择器: .类名 ​ 元素选择器: 元素/标签名称 ​ 通配符选择器: * 找出所有页面元素 包含页面上所有的标签 ​ 选择器分组 : 选择器1, 选择器2 [选择器1,选择器2] 层级选择器: ​ 后代选择器: 选择器1 选择器2 找出所有的后代,儿子孙子曾孙 ​ 子元素选择器: 选择器1 &gt;选择器2 找出所有儿子 ​ 相邻兄弟选择器: 选择器1+选择器2 : 找出紧挨着自己那个弟弟 ​ 兄弟选择器 : 选择器1~选择器2 : 找出所有的弟弟 属性选择器: ​ 选择器[属性名称] 12选择器[属性名称][属性名名]选择器[属性名称='属性值'][属性名称='属性值'][属性名称='属性值'] 表单选择器: ​ :input 找出所有的输入项 : 不单单找出input textarea select ​ :text 找出type类型为 text ​ :password 基本过滤器: ​ :even ​ :odd ​ :gt ​ :lt ​ :eq ​ :first ​ :last 表单对象属性: ​ :selected ​ :checked 12345678910111213141516171819202122$(function) : 文档加载完成的事件css() : 修改css样式prop() : 修改属性/ 获取属性html() : 修改innerHTMLappend : 给自己添加子节点appendTo : 将自己添加到别人家,给自己找一个爹prepend : 在自己最前面添加子节点after : 在自己后面添加一个兄弟empty : 清空所有子节点$(cities).each(function(i,n)&#123; &#125;)$.each(arr,function(i,n)&#123; &#125;);了解, 熟悉, 熟练, 精通 经过一个项目,将所有学过串起来 使用JQ完成表单的校验(扩展)需求分析在用户提交表单的时候, 我们最好是能够在用户数据提交给服务器之前去做一次校验,防止服务器压力过大,并且需要给用户一个友好提示 技术分析 trigger triggerHandler is() 步骤分析 首先给必填项,添加尾部添加一个小红点 获取用户输入的信息,做相应的校验 事件: 获得焦点, 失去焦点, 按键抬起 表单提交的事件 代码实现]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Javascript]]></title>
    <url>%2F2019%2F01%2F22%2Fjavascript%2F</url>
    <content type="text"><![CDATA[Javascript 使用JS完成页面定时弹出广告使用JS完成表单的校验使用JS完成表格的隔行换色使用JS完成复选框的全选效果使用JS完成省市的联动效果JS控制下拉列表左右选择教学导航 掌握JS中的BOM对象 掌握JS中的常用事件 掌握JS中的常用DOM操作 了解JS中的内置对象 上一次内容进行复习: CSS: 层叠样式表 主要作用: 美化页面, 将美化和HTML进行分离,提高代码复用性 选择器: ​ 元素选择器: 元素的名称{} ​ 类选择器: . 开头 ​ ID选择器: #ID选择器 ​ ​ 后代选择器: 选择器1 选择器2 ​ 子元素选择器: 选择器1 &gt; 选择器2 ​ 选择器分组: 选择器1,选择器2,选择器3{} ​ 属性选择器: 选择器[属性的名称=’属性的值’] ​ 伪类选择器: 浮动: ​ float 属性: left right 清除浮动: ​ clear 属性: both left right 盒子模型: 上右下左 padding 10px 20px 30px 40px 顺时针的方向 ​ 内边距: 控制的盒子内距离 ​ 边框: 盒子的边框 ​ 外边距: 控制盒子与盒子之间的距离 绝对定位: position : absolute; top: left JS开发: 是一门脚本语言,由浏览器来解释执行,不需要经过编译 JS声明变量: var 变量的名字; JS声明函数: function 函数的名称(参数的名字){} JS开发的步骤: 1. 确定事件 2. 事件要触发函数,所以我们是要声明函数 3. 函数里面通常是去做一些交互才操作, 弹框, 修改页面内容,动态去添加一些东西 0. 轮播图自动播放需求:有一组图片, 每隔3秒钟,就去切换一张,最终是一直在不停切换 技术分析:​ 切换图片: ​ 每个三秒钟做一件事: 步骤分析:1. 确定事件: 文档加载完成的事件 onload 2. 事件要触发 : init() 3. 函数里面要做一些事情:(通常会去操作元素,提供交互) 1. 开启定时器: 执行切换图片的函数 changeImg() 4. changeImg() 1. 获得要切换图片的那个元素 1. 完成页面定时弹出广告1.1 需求分析​ 一般网页，当我们刚打开的时候，它会5秒之后，显示一个广告，让我们看5秒钟，然后他的广告就自动消失了！ 1.2 技术分析 定时器 setInterval : 每隔多少毫秒执行一次函数 setTimeout: 多少毫秒之后执行一次函数 clearInterval clearTimeout 显示广告 img.style.display = “block” 隐藏广告 img.style.display = “none” 1.3 步骤分析 确定事件: 页面加载完成的事件 onload 事件要触发函数: init() init函数里面做一件事: 启动一个定时器 : setTimeout() 显示一个广告 再去开启一个定时5秒钟之后,关闭广告 1.4 代码实现1234567891011121314151617181920212223&lt;script&gt; function init()&#123; setTimeout("showAD()",3000); &#125; function showAD()&#123; //首先要获取要操作的img var img = document.getElementById("img1"); //显示广告 img.style.display = "block"; //再开启定时器,关闭广告 setTimeout("hideAD()",3000); &#125; function hideAD()&#123; //首先要获取要操作的img var img = document.getElementById("img1"); //隐藏广告 img.style.display = "none"; &#125; &lt;/script&gt; 1.5扩展 JS的引入方式 2. 完成完成表单的校验2.1 需求分析​ 昨天我们做了一个简单的表单校验，每当用户输入出错的时候，我们是弹出了一个对话框，提示用户去修改。这样的用户体验效果非常不好好。我们今天就是需要来对他进行一个修改，当用户输入信息有问题的时候，我们就再输入框的后面给他一个友好提示。 2.2 技术分析【HTML中innerHTML属性】 【JS中的常用事件】 onfocus 事件: 获得焦点事件 onblur : 失去焦点 onkeyup : 按键抬起事件 2.3 步骤分析2.4 代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;!-- 引入外部的js文件 --&gt; &lt;script type="text/javascript" src="../js/regutils.js" &gt;&lt;/script&gt; &lt;script&gt; /* 1. 确定事件 : onfocus 2. 事件要驱动函数 3. 函数要干一些事情: 修改span的内容 */ function showTips(spanID,msg)&#123; //首先要获得要操作元素 span var span = document.getElementById(spanID); span.innerHTML = msg; &#125; /* 校验用户名: 1.事件: onblur 失去焦点 2.函数: checkUsername() 3.函数去显示校验结果 */ function checkUsername()&#123; //获取用户输入的内容 var uValue = document.getElementById("username").value; //对输入的内容进行校验 //获得要显示结果的span var span = document.getElementById("span_username"); if(uValue.length &lt; 6)&#123; //显示校验结果 span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,太短&lt;/font&gt;"; return false; &#125;else&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,可用&lt;/font&gt;"; return true; &#125; &#125; /* 密码校验 */ function checkPassword()&#123; //获取密码输入 var uPass = document.getElementById("password").value; var span = document.getElementById("span_password"); //对密码输入进行校验 if(uPass.length &lt; 6)&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,太短&lt;/font&gt;"; return false; &#125;else&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,够用&lt;/font&gt;"; return true; &#125; &#125; /* 确认密码校验 * */ function checkRePassword()&#123; //获取密码输入 var uPass = document.getElementById("password").value; //获取确认密码输入 var uRePass = document.getElementById("repassword").value; var span = document.getElementById("span_repassword"); //对密码输入进行校验 if(uPass != uRePass)&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,两次密码不一致&lt;/font&gt;"; return false; &#125;else&#123; span.innerHTML = ""; return true; &#125; &#125; /* 校验邮箱 * */ function checkMail()&#123; var umail = document.getElementById("email").value; var flag = checkEmail(umail); var span = document.getElementById("span_email"); //对邮箱输入进行校验 if(flag)&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;恭喜您,可用&lt;/font&gt;"; return true; &#125;else&#123; span.innerHTML = "&lt;font color='red' size='2'&gt;对不起,邮箱格式貌似有问题&lt;/font&gt;"; return false; &#125; &#125; function checkForm()&#123; var flag = checkUsername() &amp;&amp; checkPassword() &amp;&amp; checkRePassword() &amp;&amp; checkMail(); return flag; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form action="../01-自动轮播图片/图片自动轮播.html" onsubmit="return checkForm()" &gt; 用户名:&lt;input type="text" id="username" onfocus="showTips('span_username','用户名长度不能小于6')" onblur="checkUsername()" onkeyup="checkUsername()" /&gt;&lt;span id="span_username"&gt;&lt;/span&gt;&lt;br /&gt; 密码:&lt;input type="password" id="password" onfocus="showTips('span_password','密码长度不能小于6')" onblur="checkPassword()" onkeyup="checkPassword()"/&gt;&lt;span id="span_password"&gt;&lt;/span&gt;&lt;br /&gt; 确认密码:&lt;input type="password" id="repassword" onfocus="showTips('span_repassword','两次密码必须一致')" onblur="checkRePassword()" onkeyup="checkRePassword()" /&gt;&lt;span id="span_repassword"&gt;&lt;/span&gt;&lt;br /&gt; 邮箱:&lt;input type="text" id="email" onfocus="showTips('span_email','邮箱格式必须正确')" onblur="checkMail()" /&gt;&lt;span id="span_email"&gt;&lt;/span&gt;&lt;br /&gt; 手机号:&lt;input type="text" id="text" /&gt;&lt;br /&gt; &lt;input type="submit" value="提交" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 上午回顾:定时器: ​ setInterval(“test()”,3000) 每隔多少毫秒执行一次函数 ​ setTimeout(“test()”,3000) 多少毫秒之后执行一次函数 ​ timerID 上面定时器调用之后 ​ clearInterval() ​ clearTimeout() 切换图片 ​ img.src = “图片路径” 事件: 文档加载完成的事件 onload事件 显示广告 : img.style.display = “block” 隐藏广告: img.style.display =”none” 引入一个外部js文件 1&lt;script src="js文件的路径" type="text/javascript"/&gt; 表单校验中常用的事件: ​ 获得焦点事件: onfocus ​ 失去焦点事件 onblur ​ 按键抬起事件: onkeyup JS开发步骤 1. 确定事件 2. 事件要触发函数: 定义函数 3. 函数通常都要去做一些交互: 点击, 修改图片, 动态修改innerHTML属性... innerTEXT ​ 3.表格隔行换色3.1 需求分析​ 我们商品分类的信息太多，如果每一行都显示同一个颜色的话会让人看的眼花，为了提高用户体验，减少用户看错的情况，需要对表格进行隔行换色 3.2 技术分析改变行的颜色 3.3 步骤分析 确定事件: 文档加载完成 onload 事件要触发函数: init() 函数:操作页面的元素要操作表格中每一行 动态的修改行的背景颜色 3.4 代码实现1234567891011121314151617&lt;script &gt; function init()&#123; //得到表格 var tab = document.getElementById("tab"); //得到表格中每一行 var rows = tab.rows; //便利所有的行,然后根据奇数 偶数 for(var i=1; i &lt; rows.length; i++)&#123; var row = rows[i]; //得到其中的某一行 if(i%2==0)&#123; row.bgColor = "yellow"; &#125;else&#123; row.bgColor = "red" &#125; &#125; &#125;&lt;/script&gt; 4. 复选框的全选和全不选4.1 需求分析​ 商品分类界面中，当我们点击全选框的时候，我们希望选中所有的商品，当我们取消掉的时候，我们希望不选中所有的商品 4.2 技术分析​ 事件 : onclick点击事件 4.3 步骤分析全选和全不选步骤分析: 1.确定事件: onclick 单机事件2.事件触发函数: checkAll()3.函数要去做一些事情: 获得当前第一个checkbox的状态 获得所有分类项的checkbox 修改每一个checkbox的状态 代码实现123456789101112131415function checkAll()&#123;// 获得当前第一个checkbox的状态 var check1 = document.getElementById("check1"); //得到当前checked状态 var checked = check1.checked;// 获得所有分类项的checkbox// var checks = document.getElementsByTagName("input"); var checks = document.getElementsByName("checkone");// alert(checks.length); for(var i = 0; i &lt; checks.length; i++)&#123;// 修改每一个checkbox的状态 var checkone = checks[i]; checkone.checked = checked; &#125; &#125; 5. 省市联动效果5.1 需求分析5.2 技术分析什么是DOM: Document Object Model : 管理我们的文档 增删改查规则 【HTML中的DOM操作】 12345678910111213141516171819202122232425262728293031一些常用的 HTML DOM 方法： getElementById(id) - 获取带有指定 id 的节点（元素） appendChild(node) - 插入新的子节点（元素） removeChild(node) - 删除子节点（元素） 一些常用的 HTML DOM 属性： innerHTML - 节点（元素）的文本值 parentNode - 节点（元素）的父节点 childNodes - 节点（元素）的子节点 attributes - 节点（元素）的属性节点 查找节点：getElementById() 返回带有指定 ID 的元素。 getElementsByTagName() 返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。 getElementsByClassName() 返回包含带有指定类名的所有元素的节点列表。 增加节点：createAttribute() 创建属性节点。 createElement() 创建元素节点。 createTextNode() 创建文本节点。 insertBefore() 在指定的子节点前面插入新的子节点。 appendChild() 把新的子节点添加到指定节点。 删除节点：removeChild() 删除子节点。 replaceChild() 替换子节点。 修改节点：setAttribute() 修改属性setAttributeNode() 修改属性节点 5.3 步骤分析5.4 代码实现12 6. 使用JS控制下拉列表左右选择6.1 需求分析:在我们的分类管理中,我们要能够去修改我们的分类信息,当我们一点修改的时候,跳转到一个可以编辑的页面,这里面能够修改分类的名称,分类的描述,以及分类的商品 6.2 步骤分析:6.3 代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;!-- 步骤分析 1. 确定事件: 点击事件 :onclick事件 2. 事件要触发函数 selectOne 3. selectOne要做一些操作 (将左边选中的元素移动到右边的select中) 1. 获取左边Select中被选中的元素 2. 将选中的元素添加到右边的Select中就可以 --&gt; &lt;script&gt; function selectOne()&#123;// 1. 获取左边Select中被选中的元素 var leftSelect = document.getElementById("leftSelect"); var options = leftSelect.options; //找到右侧的Select var rightSelect = document.getElementById("rightSelect"); //遍历找出被选中的option for(var i=0; i &lt; options.length; i++)&#123; var option1 = options[i]; if(option1.selected)&#123; // 2. 将选中的元素添加到右边的Select中就可以 rightSelect.appendChild(option1); &#125; &#125; &#125; //将左边所有的商品移动到右边 function selectAll()&#123;// 1. 获取左边Select中被选中的元素 var leftSelect = document.getElementById("leftSelect"); var options = leftSelect.options; //找到右侧的Select var rightSelect = document.getElementById("rightSelect"); //遍历找出被选中的option for(var i=options.length - 1; i &gt;=0; i--)&#123; var option1 = options[i]; rightSelect.appendChild(option1); &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;table border="1px" width="400px"&gt; &lt;tr&gt; &lt;td&gt;分类名称&lt;/td&gt; &lt;td&gt;&lt;input type="text" value="手机数码"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;分类描述&lt;/td&gt; &lt;td&gt;&lt;input type="text" value="这里面都是手机数码"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;分类商品&lt;/td&gt; &lt;td&gt; &lt;!--左边--&gt; &lt;div style="float: left;"&gt; 已有商品&lt;br /&gt; &lt;select multiple="multiple" id="leftSelect" ondblclick="selectOne()"&gt; &lt;option&gt;华为&lt;/option&gt; &lt;option&gt;小米&lt;/option&gt; &lt;option&gt;锤子&lt;/option&gt; &lt;option&gt;oppo&lt;/option&gt; &lt;/select&gt; &lt;br /&gt; &lt;a href="#" onclick="selectOne()"&gt; &amp;gt;&amp;gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="#" onclick="selectAll()"&gt; &amp;gt;&amp;gt;&amp;gt; &lt;/a&gt; &lt;/div&gt; &lt;!--右边--&gt; &lt;div style="float: right;"&gt; 未有商品&lt;br /&gt; &lt;select multiple="multiple" id="rightSelect"&gt; &lt;option&gt;苹果6&lt;/option&gt; &lt;option&gt;肾7&lt;/option&gt; &lt;option&gt;诺基亚&lt;/option&gt; &lt;option&gt;波导&lt;/option&gt; &lt;/select&gt; &lt;br /&gt; &lt;a href="#"&gt; &amp;lt;&amp;lt; &lt;/a&gt; &lt;br /&gt; &lt;a href="#"&gt; &amp;lt;&amp;lt;&amp;lt; &lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan="2"&gt; &lt;input type="submit" value="提交"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt; 今天内容简单回顾: 定时器: ​ setInterval ​ setTimeout ​ clearInterval ​ clearTimeout 控制图片显示隐藏 ​ img.style.display = “block” ​ img.style.display = “none” 表单中常用的事件: ​ onfocus: 获取焦点事件 ​ onblur : 失去焦点的事件 ​ onkeyup: 按键抬起的事件 ​ onclick: 单击事件 ​ ondblclick: 双击事件 表格隔行换色,鼠标移入和移除要变色: ​ onmouseenter: 鼠标移入 ​ onmouseout: 鼠标移出 ​ onload: 文档加载完成事件 ​ onsubmit: 提交 ​ onchange: 下拉列表内容改变 checkbox.checked 选中状态 DOM的文档操作: ​ 添加节点: appendChild ​ 创建节点: document.createElement ​ 创建文本节点: document.createTextNode() JS开发步骤: 1. 确认事件 2. 事件触发函数 3. 函数里面要做一些交互 ​]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS&JS]]></title>
    <url>%2F2019%2F01%2F22%2Fcssandjs%2F</url>
    <content type="text"><![CDATA[CSS&amp;JS 使用CSS完成网站首页的优化使用CSS完成网站注册页面的优化使用JS完成简单的数据校验使用JS完成图片轮播效果目标： 了解CSS的概念 了解CSS的引入方式 了解CSS的基本用法和常用的选择器 了解CSS的盒子模型，悬浮和定位 了解JS的概念 掌握JS的基本语法，数据类型，能够使用JS完成简单的页面交互 去年的内容简单回顾 什么HTML : 超文本标记语言 p标签: 段落标签 br标签: 简单换行 h1-h6: 标题标签 hr标签: 水平分割线, 华丽的分割线 font标签: color属性改变颜色 , size b标签: 加粗 i标签: 斜体 strong标签: 带语义的加粗 em标签: 斜体标签,带语义 img标签: 图片标签 显示图片 ​ src: 指定图片路径(相对路径) ​ width: 宽度 ​ height: 高度 ​ alt: 图片加载失败时的提示 相对路径: ​ ./ 代表当前路径 ​ ../ 代表的是上一级路径 ​ ../../ 代表的是上上一级路径 ul标签: 无序列表 ol标签: 有序列表 li标签: 列表项 a标签: 超链接标签: ​ target: 打开方式 ​ href: 指定要跳转的链接地址 table标签: table &gt; tr &gt; td tr标签: 行 td标签: 列 ​ 合并行: rowspan ​ 合并列: colspan 网站注册案例: ​ form 标签: 表单标签,主要是用来向服务器提交数据 ​ method: 提交方式 get post ​ action : 提交的路径 ​ input 标签: ​ type: ​ password: 密码框 ​ text : 文本 ​ submit: 提交 ​ button: 普通的按钮 ​ reset: 重置按钮 ​ radio: 单选按钮 设置name属性让它们是一组 ​ checkbox: 复选按钮 ​ email: ​ date: ​ tel: frameset : 框架标签 ​ rows: ​ cols: frame: 使用CSS完成网站首页的优化需求分析:​ 由于我们昨天使用表格布局存在缺陷,那么我们要来考虑使用DIV+CSS来对页面进行优化 表格布局的缺陷: 1. 嵌套层级太多, 一旦出现嵌套顺序错乱, 整个页面达不到预期效果 2. 采用表格布局,页面不够灵活, 动其中某一块,整个表格布局的结构全都要变 技术分析HTML的块标签: ​ div标签: 默认占一行,自动换行 ​ span标签: 内容显示在同一行 CSS概述: ​ Cascading Style Sheets : 层叠样式表 ​ 红砖, 抹了一层水泥, 白灰 主要用作用: ​ 用来美化我们的HTML页面的 ​ HTML 决定网页的骨架 ,CSS 化妆 ​ 将页面的HTML和美化进行分离 CSS的简单语法: ​ 在一个style标签中,去编写CSS内容,最好将style标签写在这个head标签中 123456&lt;style&gt; 选择器&#123; 属性名称:属性的值; 属性名称2: 属性的值2; &#125;&lt;/style&gt; CSS选择器: 帮助我们找到我们要修饰的标签或者元素 元素选择: 1234元素的名称&#123; 属性名称:属性的值; 属性名称:属性的值;&#125; ID选择器: 12345以#号开头 ID在整个页面中必须是唯一的s#ID的名称&#123; 属性名称:属性的值; 属性名称:属性的值;&#125; 类选择器: 12345以 . 开头 .类的名称&#123; 属性名称:属性的值; 属性名称:属性的值;&#125; CSS的引入方式: ​ 外部样式: 通过link标签引入一个外部的css文件 ​ 内部样式: 直接在style标签内编写CSS代码 ​ 行内样式: 直接在标签中添加一个style属性, 编写CSS样式 CSS浮动 : 浮动的元素会脱离正常的文档流,在正常的文档流中不占空间 float属性: left right clear属性: 清除浮动 both : 两边都不允许浮动 left: 左边不允许浮动 right : 右边不允许浮动 流式布局 步骤分析: 创一个最外层div 第一部份: LOGO部分: 嵌套三个div 第二部分: 导航栏部分 : 放置5个超链接 第三部分: 轮播图 第四部分: 第五部分: 直接放一张图片 第六部分: 抄第四部分的 第七部分: 放置一张图片 第八部分: 放一堆超链接 代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;style&gt; .logo&#123; float: left; width: 33%; /*border-width: 1px; border-style: solid; border-color: red;*/ height: 60px; line-height: 60px; /* border: 1px solid red;*/ &#125; .amenu&#123; color: white; text-decoration: none; height: 50px; line-height: 50px; &#125; .product&#123; float: left; text-align: center; width: 16%; height: 240px; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 1. 创一个最外层div 2. 第一部份: LOGO部分: 嵌套三个div 3. 第二部分: 导航栏部分 : 放置5个超链接 4. 第三部分: 轮播图 5. 第四部分: 6. 第五部分: 直接放一张图片 7. 第六部分: 抄第四部分的 8. 第七部分: 放置一张图片 9. 第八部分: 放一堆超链接 --&gt; &lt;div&gt; &lt;!--2. 第一部份: LOGO部分: 嵌套三个div--&gt; &lt;div&gt; &lt;div class="logo"&gt; &lt;img src="../img/logo2.png"/&gt; &lt;/div&gt; &lt;div class="logo"&gt; &lt;img src="../img/header.png"/&gt; &lt;/div&gt; &lt;div class="logo"&gt; &lt;a href="#"&gt;登录&lt;/a&gt; &lt;a href="#"&gt;注册&lt;/a&gt; &lt;a href="#"&gt;购物车&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--清除浮动--&gt; &lt;div style="clear: both;"&gt;&lt;/div&gt; &lt;!--3. 第二部分: 导航栏部分 : 放置5个超链接--&gt; &lt;div style="background-color: black; height: 50px;"&gt; &lt;a href="#" class="amenu"&gt;首页&lt;/a&gt; &lt;a href="#" class="amenu"&gt;手机数码&lt;/a&gt; &lt;a href="#" class="amenu"&gt;电脑办公&lt;/a&gt; &lt;a href="#" class="amenu"&gt;鞋靴箱包&lt;/a&gt; &lt;a href="#" class="amenu"&gt;香烟酒水&lt;/a&gt; &lt;/div&gt; &lt;!--4. 第三部分: 轮播图--&gt; &lt;div&gt; &lt;img src="../img/1.jpg" width="100%"/&gt; &lt;/div&gt; &lt;!--5. 第四部分:--&gt; &lt;div&gt; &lt;div&gt;&lt;h2&gt;最新商品&lt;img src="../img/title2.jpg"/&gt;&lt;/h2&gt;&lt;/div&gt; &lt;!--左侧广告图--&gt; &lt;div style="width: 15%; height: 480px; float: left;"&gt; &lt;img src="../products/hao/big01.jpg" width="100%" height="100%"/&gt; &lt;/div&gt; &lt;!-- 右侧商品 --&gt; &lt;div style="width: 84%; height: 480px;float: left;"&gt; &lt;div style="height: 240px; width: 50%; float: left;"&gt; &lt;img src="../products/hao/middle01.jpg" height="100%" width="100%" /&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--6. 第五部分: 直接放一张图片--&gt; &lt;div&gt; &lt;img src="../products/hao/ad.jpg" width="100%"/&gt; &lt;/div&gt; &lt;!--7. 第六部分: 抄第四部分的--&gt; &lt;div&gt; &lt;div&gt;&lt;h2&gt;最新商品&lt;img src="../img/title2.jpg"/&gt;&lt;/h2&gt;&lt;/div&gt; &lt;!--左侧广告图--&gt; &lt;div style="width: 15%; height: 480px; float: left;"&gt; &lt;img src="../products/hao/big01.jpg" width="100%" height="100%"/&gt; &lt;/div&gt; &lt;!-- 右侧商品 --&gt; &lt;div style="width: 84%; height: 480px;float: left;"&gt; &lt;div style="height: 240px; width: 50%; float: left;"&gt; &lt;img src="../products/hao/middle01.jpg" height="100%" width="100%" /&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;div class="product"&gt; &lt;img src="../products/hao/small08.jpg" /&gt; &lt;p&gt;高压锅&lt;/p&gt; &lt;p style="color: red;"&gt;$998&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--8. 第七部分: 放置一张图片--&gt; &lt;div&gt; &lt;img src="../img/footer.jpg" width="100%"/&gt; &lt;/div&gt; &lt;!--9. 第八部分: 放一堆超链接--&gt; &lt;div style="text-align: center;"&gt; &lt;a href="#"&gt;关于我们&lt;/a&gt; &lt;a href="#"&gt;联系我们&lt;/a&gt; &lt;a href="#"&gt;招贤纳士&lt;/a&gt; &lt;a href="#"&gt;法律声明&lt;/a&gt; &lt;a href="#"&gt;友情链接&lt;/a&gt; &lt;a href="#"&gt;支付方式&lt;/a&gt; &lt;a href="#"&gt;配送方式&lt;/a&gt; &lt;a href="#"&gt;服务声明&lt;/a&gt; &lt;a href="#"&gt;广告声明&lt;/a&gt; &lt;br /&gt; Copyright © 2005-2016 版权所有 &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 扩展: CSS的优先级 按照选择器搜索精确度来编写: 行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器 就近原则: 哪个离得近,就选用哪个的样式 CSS: 层叠样式表 主要作用: 1. 美化页面 2. 将页面美化和HTML代码进行分离,提高代码的服用型 选择器: 元素选择器: 标签的名称{} 类选择器: 以. 开头 .类的名称 ID选择器: 以#开头 , #ID的名称 (ID必须是页面上面唯一) CSS浮动: float : left, right 不再占有正常文档流中的空间 , 流式布局 clear : both left right ​ CSS中的其它选择器 选择器分组: 选择器1,选择器2{ 属性的名称:属性的值} 属性选择器: 1234a[title]a[titile='aaa']a[href][title]a[href][title='aaa'] 后代选择器: 爷爷选择器 孙子选择器 找出所有的后代 子元素选择器: 父选择器 &gt; 儿子选择器 伪类选择器: 通常都是用在A标签上 ​ ​ 使用DIV+CSS完成注册页面的优化需求分析由于我们的注册页面也是用table布局的,存在与首页同样的问题,所以我们需要使用div+css对我们的注册页面进行美化 总共是5部分内容 技术分析CSS的盒子模型: 万物皆盒子 内边距: padding-top: padding-right: padding-bottom: padding-left: 1234padding:10px; 上下左右都是10pxpadding:10px 20px; 上下是10px 左右是20pxpadding: 10px 20px 30px; 上 10px 右20px 下30px 左20pxpadding: 10px 20px 30px 40px; 上右下左, 顺时针的方向 外边距: margin-top: margin-right: margin-bottom: margin-left: CSS绝对定位: ​ position: absolute ​ top: 控制距离顶部的位置 ​ left: 控制距离左边的位置 步骤分析: 总共是5部分 第一部分是LOGO部分 第二部分是导航菜单 第三部分是注册部分 第四部分是FOOTER图片 第五部分是一堆超链接 代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;link rel="stylesheet" type="text/css" href="../css/main.css"/&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 1. 总共是5部分 2. 第一部分是LOGO部分 3. 第二部分是导航菜单 4. 第三部分是注册部分 5. 第四部分是FOOTER图片 6. 第五部分是一堆超链接 --&gt; &lt;div&gt; &lt;!--2. 第一部分是LOGO部分--&gt; &lt;div&gt; &lt;div class="logo"&gt; &lt;img src="../img/logo2.png" /&gt; &lt;/div&gt; &lt;div class="logo"&gt; &lt;img src="../img/header.png" /&gt; &lt;/div&gt; &lt;div class="logo"&gt; &lt;a href="#"&gt;登录&lt;/a&gt; &lt;a href="#"&gt;注册&lt;/a&gt; &lt;a href="#"&gt;购物车&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--清除浮动--&gt; &lt;div style="clear: both;"&gt;&lt;/div&gt; &lt;!--3. 第二部分是导航菜单--&gt; &lt;div style="background-color: black; height: 50px;"&gt; &lt;a href="#" class="amenu"&gt;首页&lt;/a&gt; &lt;a href="#" class="amenu"&gt;手机数码&lt;/a&gt; &lt;a href="#" class="amenu"&gt;电脑办公&lt;/a&gt; &lt;a href="#" class="amenu"&gt;鞋靴箱包&lt;/a&gt; &lt;a href="#" class="amenu"&gt;香烟酒水&lt;/a&gt; &lt;/div&gt; &lt;!--4. 第三部分是注册部分--&gt; &lt;div style="background: url(../image/regist_bg.jpg);height: 500px;"&gt; &lt;div style="position:absolute;top:200px;left:350px;border: 5px solid darkgray;width: 50%;height: 50%;background-color: white;"&gt; &lt;table width="60%" align="center"&gt; &lt;tr&gt; &lt;td colspan="2"&gt;&lt;font color="blue" size="6"&gt;会员注册&lt;/font&gt;USER REGISTER&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;用户名:&lt;/td&gt; &lt;td&gt;&lt;input type="text"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;密码:&lt;/td&gt; &lt;td&gt;&lt;input type="password"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;确认密码:&lt;/td&gt; &lt;td&gt;&lt;input type="password"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;email:&lt;/td&gt; &lt;td&gt;&lt;input type="email"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;姓名:&lt;/td&gt; &lt;td&gt;&lt;input type="text"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;性别:&lt;/td&gt; &lt;td&gt;&lt;input type="radio" name="sex"/&gt; 男 &lt;input type="radio" name="sex"/&gt; 女 &lt;input type="radio" name="sex"/&gt; 妖 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;出生日期:&lt;/td&gt; &lt;td&gt;&lt;input type="date"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;验证码:&lt;/td&gt; &lt;td&gt;&lt;input type="text"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;input type="submit" value="注册"/&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;!--5. 第四部分是FOOTER图片--&gt; &lt;div&gt; &lt;img src="../img/footer.jpg" width="100%"/&gt; &lt;/div&gt; &lt;!--9. 第四部分: 放一堆超链接--&gt; &lt;div style="text-align: center;"&gt; &lt;a href="#"&gt;关于我们&lt;/a&gt; &lt;a href="#"&gt;联系我们&lt;/a&gt; &lt;a href="#"&gt;招贤纳士&lt;/a&gt; &lt;a href="#"&gt;法律声明&lt;/a&gt; &lt;a href="#"&gt;友情链接&lt;/a&gt; &lt;a href="#"&gt;支付方式&lt;/a&gt; &lt;a href="#"&gt;配送方式&lt;/a&gt; &lt;a href="#"&gt;服务声明&lt;/a&gt; &lt;a href="#"&gt;广告声明&lt;/a&gt; &lt;br /&gt; Copyright © 2005-2016 版权所有 &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; CSS部分的回顾:​ CSS: 层叠样式表. ​ CSS作用: 美化页面,提高代码的复用性 ​ 选择器: ​ 需要掌握的: ​ 元素选择器: 标签的名称 ​ 类选择器: 以 . 开头 ​ ID选择器: 以#开头, #ID的名称 ID必须是唯一的 ​ 优先级: 按照选择精确度: 行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器 ​ 就近原则 ​ 扩展选择器: ​ 选择器分组: 选择器1,选择器2 以逗号隔开 ​ 后代选择器: 爷爷 孙子 中间以空格隔开 ​ 子元素选择器: 爸爸 &gt; 儿子 ​ 属性选择器: 选择器[属性的名称=’’] ​ 伪类选择器: 超链接标签上使用 ​ 浮动: float属性 left right ​ 清除浮动: clear: both left right ​ ​ 盒子模型: 顺时针 : 上右下左 ​ padding : 内边距 ,控制的是盒子内容的距离 ​ margin : 外边距 控制盒子与盒子之间的距离 ​ 绝对定位: ​ position: absolute ​ top: ​ left: 使用JS完成简单的数据校验需求分析使用JS完成对注册页面的简单数据校验,不允许出现用户名或密码为空的情况 技术分析JavaScript概述什么是javascript: JavaScript一种直译式脚本语言， 什么是脚本语言? ​ java源代码 —-&gt; 编译成.class文件 —–&gt; java虚拟机中才能执行 ​ 脚本语言: 源码 ——– &gt; 解释执行 ​ js由我们的浏览器来解释执行 HTML: 决定了页面的框架 CSS: 用来美化我们的页面 JS: 提供用户的交互的 JS的组成:ECMAScript : 核心部分 ,定义js的语法规范 DOM: document Object Model 文档对象模型 , 主要是用来管理页面的 BOM : Browser Object Model 浏览器对象模型, 前进,后退,页面刷新, 地址栏, 历史记录, 屏幕宽高 JS的语法:变量弱类型: var i = true 区分大小写 语句结束之后的分号 ,可以有,也可以没有 写在script标签 JS的数据类型: 基本类型 string number boolean undefine null 引用类型 对象, 内置对象 类型转换 js内部自动转换 JS的运算符和语句: 运算符和java 一样 “===” 全等号: 值和类型都必须相等 == 值相等就可以了 语句和java 一样 JS的输出 alert() 直接弹框 document.write() 向页面输出 console.log() 向控制台输出 innerHTML: 向页面输出 获取页面元素: document.getElementById(“id的名称”); JS声明变量: ​ var 变量的名称 = 变量的值 JS声明函数: ​ var 函数的名称 = function(){ ​ } ​ ​ function 函数的名称(){ ​ } JS的开发步骤1231. 确定事件2. 通常事件都会出发一个函数3. 函数里面通常都会去操作页面元素,做一些交互动作 步骤分析:代码实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;script&gt; /* 1. 确认事件: 表单提交事件 onsubmit事件 2. 事件所要触发的函数: checkForm 3. 函数中要干点事情 1. 校验用户名, 用户不能为空, 长度不能小于6位 1.获取到用户输入的值 */ function checkForm()&#123; //获取用户名输入项 var inputObj = document.getElementById("username"); //获取输入项的值 var uValue = inputObj.value;// alert(uValue); //用户名长度不能6位 "" if(uValue.length &lt; 6 )&#123; alert("对不起,您的长度太短!"); return false; &#125; //密码长度大于6 和确认必须一致 //获取密码框输入的值 var input_password = document.getElementById("password"); var uPass = input_password.value; if(uPass.length &lt; 6)&#123; alert("对不起,您还是太短啦!"); return false; &#125; //获取确认密码框的值 var input_repassword = document.getElementById("repassword"); var uRePass = input_repassword.value; if(uPass != uRePass)&#123; alert("对不起,两次密码不一致!"); return false; &#125; //校验手机号 var input_mobile = document.getElementById("mobile"); var uMobile = input_mobile.value; // if(!/^[1][3578][0-9]&#123;9&#125;$/.test(uMobile))&#123; alert("对不起,您的手机号无法识别!"); return false; &#125; //校验邮箱: /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\.[a-zA-Z0-9_-])+/ var inputEmail = document.getElementById("email"); var uEmail = inputEmail.value; if(!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\.[a-zA-Z0-9_-])+/.test(uEmail))&#123; alert("对不起,邮箱不合法"); return false; &#125; return true; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form action="JS开发步骤.html" onsubmit="return checkForm()"&gt; &lt;div&gt;用户名:&lt;input id="username" type="text" /&gt;&lt;/div&gt; &lt;div&gt;密码:&lt;input id="password" type="password" /&gt;&lt;/div&gt; &lt;div&gt;确认密码:&lt;input id="repassword" type="password" /&gt;&lt;/div&gt; &lt;div&gt;手机号码:&lt;input id="mobile" type="number" /&gt;&lt;/div&gt; &lt;div&gt;邮箱:&lt;input id="email" type="text" /&gt;&lt;/div&gt; &lt;div&gt;&lt;input type="submit" value="注册" /&gt;&lt;/div&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; javascript : 它是一门脚本语言 , 直接解释执行的语言 javascript: ​ ECMAScript : 定义的语法 ​ DOM: document Object Model ​ BOM: 浏览器对象模型 会定义变量: var 变量的名称 = 变量的值 会定义函数: ​ function 函数的名称(参数的名称){ ​ } 使用JS完成图片的轮播效果需求分析在我们的网站首页,通常需要有一块区域,用来显示广告,但是这块区域如果仅仅显示一张图片肯定是不够的, 故我们需要采用动态循环播放我们所有的广告. 技术分析:步骤分析:代码实现:1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;script&gt; /* 当页面加载完成的时候, 动态切换图片 1.确定事件: 2.事件所要触发的函数 */ var index = 1; //切换图片的函数 function changeAd()&#123; //获取要操作的img var img = document.getElementById("imgAd"); img.src = "../img/"+(index%3+1)+".jpg"; //0,1,2 //1,2,3 index++; &#125; function init()&#123; //启动定时器 setInterval("changeAd()",3000); &#125; &lt;/script&gt; &lt;/head&gt; &lt;body onload="init()"&gt; &lt;img src="../img/1.jpg" id="imgAd"/&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Welcome]]></title>
    <url>%2F2019%2F01%2F22%2Fbackgroudmusic%2F</url>
    <content type="text"><![CDATA[Tips：只显示1000首歌曲，歌单中有版权音乐，有些歌曲无法播放。 任务清单： Blog JavaSE JDBC]]></content>
      <categories>
        <category>日程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML]]></title>
    <url>%2F2019%2F01%2F22%2Fhtml%2F</url>
    <content type="text"><![CDATA[HTML 网站信息页面案例网站图片信息页面案例网站友情链接页面案例网站首页案例网站注册页面案例网站后台页面案例导航 了解什么是标记语言 了解HTML主要特性，主要变化以及发展趋势 了解HTML的结构标签 掌握HTML的主要标签（字体，图片，列表，链接，表单等标签） 1.网站信息页面1.1需求分析:公司需要一个对外宣传的网站介绍,介绍公司的主要业务,公司的发展历史,公司的口号等等信息 1.2技术分析:HTML概述:HTML: Hyper Text Markup Language 超文本标记语言 超文本: 比普通文本功能更加强大,可以添加各种样式 标记语言: 通过一组标签.来对内容进行描述. &lt;关键字&gt; , 是由浏览器来解释执行 123456&lt;h1&gt;静夜诗&lt;/h1&gt;&lt;b&gt;&lt;i&gt;--李白&lt;/i&gt; &lt;/b&gt; &lt;br/&gt;&lt;p&gt;床前明月光,&lt;/p&gt;&lt;p&gt;地上鞋两双,&lt;/p&gt;&lt;p&gt;举头望明月,&lt;/p&gt;&lt;p&gt;低头思故乡.&lt;/p&gt; 为什么要学习HTML:生活所迫 HTML的主要作用:设计网页的基础,HTML5 HTML语法规范&lt;!-- 1. 上面是一个文档声明 2. 根标签 html 3. html文件主要包含两部分. 头部分和体部分 头部分 : 主要是用来放置一些页面信息 体部分 : 主要来放置我们的HTML页面内容 4. 通过标签来对内容进行描述,标签通常都是由开始标签和结束标签组成 5. 标签不区分大小写, 官方建议使用小写 --&gt; 1.3步骤分析: 公司简介 需要标题 水平分割线 四个段落 第一个段落字体需要红色 1.4代码实现:1234567891011121314151617181920212223242526272829&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;网站信息页面&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 1. 公司简介 需要标题 2. 水平分割线 3. 四个段落 4. 第一个段落字体需要红色 --&gt; &lt;h3&gt;公司简介&lt;/h3&gt; &lt;hr /&gt; &lt;p&gt; &lt;font color="red"&gt;“程序员训练营”&lt;/font&gt;是由&lt;b&gt;&lt;i&gt;XXX&lt;/i&gt;&lt;/b&gt;联合中关村软件园、CSDN，并委托XXX进行教学实施的软件开发高端培训机构，致力于服务各大软件企业，解决当前软件开发技术飞速发展，而企业招不到优秀人才的困扰。 目前，“程序员训练营”已成长为行业“学员质量好、课程内容深、企业满意”的移动开发高端训练基地，并被评为中关村软件园重点扶持人才企业。 &lt;/p&gt; &lt;p&gt; &lt;strong&gt;程序员&lt;/strong&gt;的学员多为大学毕业后，&lt;em&gt;有理想、有梦想，&lt;/em&gt;想从事IT行业，而没有环境和机遇改变自己命运的年轻人。程序员的学员筛选制度，远比现在90%以上的企业招聘流程更为严格。任何一名学员想成功入学“程序员”，必须经历长达2个月的面试流程，这些流程中不仅包括严格的技术测试、自学能力测试，还包括性格测试、压力测试、品德测试等等测试。毫不夸张地说，程序员训练营所有学员都是精挑细选出来的。百里挑一的残酷筛选制度确保学员质量，并降低企业的用人风险。 &lt;/p&gt; &lt;p&gt; 程序员训练营不仅着重培养学员的基础理论知识，更注重培养项目实施管理能力，并密切关注技术革新，不断引入先进的技术，研发更新技术课程，确保学员进入企业后不仅能独立从事开发工作，更能给企业带来新的技术体系和理念。 &lt;/p&gt; &lt;p&gt; 一直以来，程序员以技术视角关注IT产业发展，以深度分享推进产业技术成长，致力于弘扬技术创新，倡导分享、 开放和协作，努力打造高质量的IT人才服务平台。 &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 1.5 扩展内容​ b : 加粗 ​ i : 斜体 ​ strong: 加粗, 带语义标签 em: 斜体, 带语义 2.网站图片信息2.1需求分析:在网站中通常需要显示LOGO图片,显示效果如下 2.2技术分析img 标签: ​ 常用的属性; ​ width : 宽度 ​ height: 高度 ​ src : 指定文件路径 ​ alt: 图片加载失败时的提示内容 2.3步骤分析2.4代码实现12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 常用属性: src : 指定图片路径 width : 指定图片宽度 height : 图片高度 alt : 文件加载失败时的提示信息 --&gt; &lt;img src="../img/demo.jpg" width="500px" alt="这张图片可能加载问题" /&gt; &lt;/body&gt;&lt;/html&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!--在网页中显示图片--&gt; &lt;img src="../img/logo2.png" width="30%"/&gt; &lt;img src="../image/header.jpg" width="30%" /&gt; &lt;/body&gt;&lt;/html&gt; 2.5 扩展-文件路径 相对路径 123./ 代表的是当前路径../ 代表的上一级路径../../ 上上一级路径 3.网站友情链接页面3.1需求分析在网站中,通常会显示友商公司的网站链接 百度 新浪微博 程序员 3.2技术分析列表标签: ​ 无序列表: ul ​ type: 小圆圈,小圆点, 小方块 ​ 有序列表: ol ​ type: 1,a ,A,I, ​ start : 指定是起始索引 3.3步骤分析3.4代码实现12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;!-- 1.使用无序列表 百合网 世纪家园 珍爱网 非诚勿扰 --&gt; &lt;body&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://www.baihe.com" target="_blank"&gt;百合网&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.jiayuan.com"&gt;世纪家园&lt;/a&gt;&lt;/li&gt; &lt;li&gt;珍爱网&lt;/li&gt; &lt;li&gt;非诚勿扰&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt;&lt;/html&gt; 3.5 扩展内容​ 点击链接,跳转去指定网站 ​ a 超链接标签 ​ 常用的属性: ​ href: 指定要跳转去的链接地址 ​ 如果是网络地址需要加上http协议 , ​ 如果访问的是本网站的html文件,可以直接写文件路径 ​ target : 以什么方式打开 ​ _self: 默认打开方式,在当前窗口打开 ​ _blank: 新起一个标签页打开页面 内容回顾: 网站信息案例 字体标签 font color: 颜色 size: 大小 1~7 face: 改变字体 p 段落标签 h标题标签 : 1~6 br 换行 hr 水平线 b 加粗 i 斜体 strong : 加粗 包含语义 em : 斜体 包含语义 网站图片案例 img标签 src : 指定图片的路径 width: 宽度 height: 高度 alt : 图片加载错误时的提示信息 相对路径: ./ 代表的是当前路径 ../ 代表的上一级路径 ../../ 代表的上上一级路径 友情链接: ul: 无序列表 type : ol: 有序列表 type : 样式 start : 起始索引 li : 列表项 a 超链接标签 href : 要访问的链接地址 target : 打开方式 网站首页 table标签 border: 指定边框 width : 宽度 height : 高度 bgcolor : 背景颜色 align : 对齐方式 tr标签 td标签 colspan: 跨列操作 rowspan: 跨行操作 表格单元格的合并 表格的嵌套 4.网站首页4.1需求分析:​ 根据产品文档,完成商城首页,显示效果如图: 4.2技术分析:表格标签table​ table标签: ​ 常用的属性: ​ bgcolor : 背景色 ​ width : 宽度 ​ height : 高度 ​ align : 对齐方式 ​ tr 标签 ​ td 标签 合并单元格:​ colspan : 跨列操作 ​ rowspan : 跨行操作 ​ 注意: 跨行或者跨列操作之后,被占掉的格子需要删除掉 表格的嵌套:​ 在td中可以嵌套一个表格 4.3步骤分析 创建一个8行一列的表格 第一部份: LOGO部分: 嵌套一个一行三列的表格 第二部分: 导航栏部分 : 放置5个超链接 第三部分: 轮播图 第四部分: 嵌套一个三行7列表格 第五部分: 直接放一张图片 第六部分: 抄第四部分的 第七部分: 放置一张图片 第八部分: 放一堆超链接 4.4代码实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 1. 创建一个8行一列的表格 2. 第一部份: LOGO部分: 嵌套一个一行三列的表格 3. 第二部分: 导航栏部分 : 放置5个超链接 4. 第三部分: 轮播图 5. 第四部分: 嵌套一个三行7列表格 6. 第五部分: 直接放一张图片 7. 第六部分: 抄第四部分的 8. 第七部分: 放置一张图片 9. 第八部分: 放一堆超链接 --&gt; &lt;table width="100%" &gt; &lt;!--第一部份: LOGO部分: 嵌套一个一行三列的表格--&gt; &lt;tr&gt; &lt;td&gt; &lt;table width="100%"&gt; &lt;tr&gt; &lt;td&gt; &lt;img src="../img/logo2.png" /&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../image/header.jpg" /&gt; &lt;/td&gt; &lt;td&gt; &lt;a href="#"&gt;登录&lt;/a&gt; &lt;a href="#"&gt;注册&lt;/a&gt; &lt;a href="#"&gt;购物车&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第二部分: 导航栏部分 : 放置5个超链接--&gt; &lt;tr bgcolor="black"&gt; &lt;td height="50px"&gt; &lt;a href="#"&gt;&lt;font color="white"&gt;首页&lt;/font&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;font color="white"&gt;手机数码&lt;/font&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;font color="white"&gt;鞋靴箱包&lt;/font&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;font color="white"&gt;电脑办公&lt;/font&gt;&lt;/a&gt; &lt;a href="#"&gt;&lt;font color="white"&gt;香烟酒水&lt;/font&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第三部分: 轮播图 --&gt; &lt;tr&gt; &lt;td&gt; &lt;img src="../img/1.jpg" width="100%" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第四部分: 嵌套一个三行7列表格--&gt; &lt;tr&gt; &lt;td&gt; &lt;table width="100%" height="500px"&gt; &lt;tr&gt; &lt;td colspan="7"&gt; &lt;h3&gt;最新商品&lt;img src="../img/title2.jpg"&gt;&lt;/h3&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr align="center"&gt; &lt;!--左边大图的--&gt; &lt;td rowspan="2" width="206px" height="480px"&gt; &lt;img src="../products/hao/big01.jpg" /&gt; &lt;/td&gt; &lt;td colspan="3" height="240px"&gt; &lt;img src="../products/hao/middle01.jpg" width="100%" height="100%" /&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr align="center"&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第五部分: 直接放一张图片--&gt; &lt;tr&gt; &lt;td&gt; &lt;img src="../products/hao/ad.jpg" width="100%" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第六部分: 抄第四部分的--&gt; &lt;tr&gt; &lt;td&gt; &lt;table width="100%" height="500px"&gt; &lt;tr&gt; &lt;td colspan="7"&gt; &lt;h3&gt;热门商品&lt;img src="../img/title2.jpg"&gt;&lt;/h3&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr align="center"&gt; &lt;!--左边大图的--&gt; &lt;td rowspan="2" width="206px" height="480px"&gt; &lt;img src="../products/hao/big01.jpg" /&gt; &lt;/td&gt; &lt;td colspan="3" height="240px"&gt; &lt;img src="../products/hao/middle01.jpg" width="100%" height="100%" /&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr align="center"&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;td&gt; &lt;img src="../products/hao/small06.jpg" /&gt; &lt;p&gt;洗衣机&lt;/p&gt; &lt;p&gt;&lt;font color="red"&gt;$998&lt;/font&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第七部分: 放置一张图片--&gt; &lt;tr&gt; &lt;td&gt; &lt;img src="../image/footer.jpg" width="100%" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!--第八部分: 放一堆超链接--&gt; &lt;tr&gt; &lt;td align="center"&gt; &lt;a href="#"&gt;关于我们&lt;/a&gt; &lt;a href="#"&gt;联系我们&lt;/a&gt; &lt;a href="#"&gt;招贤纳士&lt;/a&gt; &lt;a href="#"&gt;法律声明&lt;/a&gt; &lt;a href="#"&gt;友情链接&lt;/a&gt; &lt;a href="#"&gt;支付方式&lt;/a&gt; &lt;a href="#"&gt;配送方式&lt;/a&gt; &lt;a href="#"&gt;服务声明&lt;/a&gt; &lt;a href="#"&gt;广告声明&lt;/a&gt; &lt;br /&gt;Copyright © 2005-2016 版权所有 &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt; 5.网站注册页面:5.1需求分析:​ 编写一个HTML页面, 显示效果如图所示 5.2技术分析: 表单标签 123456789101112131415161718192021222324252627282930313233343536&lt;!-- 表单标签 action : 直接提交的地址 method : get 方式 默认提交方式 ,会将参数拼接在链接后面 , 有大小限制 ,4k post 方式 会将参数封装在请求体中, 没有这样的限制 input : type: 指定输入项的类型 text : 文本 password : 密码框 radio : 单选按钮 checkbox : 复选框 file : 上传文件 submit : 提交按钮 button : 普通按钮 reset : 重置按钮 hidden : 隐藏域 date : 日期类型 tel : 手机号 number : 只允许输入数字 placeholder : 指定默认的提示信息 name : 在表单提交的时候,当作参数的名称 id : 给输入项取一个名字, 以便于后期我们去找到它,并且操作它 textarea : 文本域, 可以输入一段文本 cols : 指定宽度 rows : 指定的是高度 select : 下拉列表 option : 选择项 --&gt; ​ 步骤分析: logo部分 导航栏 注册部分 页脚图片 网站声明信息 5.3代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;form action="注册入门案例.html"&gt; &lt;table width="60%" align="center"&gt; &lt;tr&gt; &lt;td colspan="2"&gt;&lt;font color="blue" size="5"&gt;会员注册&lt;/font&gt; USER REGISTER&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;用户名:&lt;/td&gt; &lt;td&gt; &lt;input type="text" placeholder="请输入用户名"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;密 码:&lt;/td&gt; &lt;td&gt; &lt;input type="password" placeholder="请输入密码"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;确认密码:&lt;/td&gt; &lt;td&gt; &lt;input type="password" placeholder="请再次输入密码"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;email:&lt;/td&gt; &lt;td&gt; &lt;input type="text" placeholder="请输入邮箱"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;姓名:&lt;/td&gt; &lt;td&gt; &lt;input type="text" placeholder="请输入真实姓名"/&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;性别:&lt;/td&gt; &lt;td&gt; &lt;input type="radio" name="sex" /&gt; 男 &lt;input type="radio" name="sex" /&gt; 女 &lt;input type="radio" name="sex" /&gt; 妖 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;出生日期:&lt;/td&gt; &lt;td&gt; &lt;input type="date" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;验证码:&lt;/td&gt; &lt;td&gt; &lt;input type="text" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt; &lt;input type="submit" value="注册" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/form&gt; 6.网站后台页面展示6.1需求分析:我们前面已经做完了首页商品展示, 那么我们需要一个页面用来编辑我们的商品信息, 还有商品分类, 用户购买之后,还得有订单管理页面 6.2技术分析框架标签:frameset 注意: 使用了frameset必须将body删掉,否则页面会有问题 frame 常用属性: ​ src: 引入的html文件路径​ name: 指定框架的名称 6.3步骤分析6.4代码实现扩展框架中点击跳转 常用的快捷键123456Ctrl + D 删除光标当前所在的行Ctrl + Shift + R 复制当前行到下一行Ctrl + Enter 将光标移动到下一行Ctrl + Shift + Enter 将光标定位在上一行Ctrl + Shift + / 注释当前行Ctrl + R 运行当前网页/刷新当前网页]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github 搭建 Hexo 博客]]></title>
    <url>%2F2019%2F01%2F16%2Fhexo%2F</url>
    <content type="text"><![CDATA[Github 搭建 Hexo 博客 简介本篇文章主要讲解Hexo在GitHub上搭建博客接下来让我们一起进入Hexo搭建博客学习吧。 Hexo什么是Hexo？Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 当我们在遇到一个新东西的时候，进入其官网能帮助我们解决很多问题。关于什么是Hexo？还有一些关于Hexo的问题，大家进入Hexo官网进行查看。 如何使用我们在使用Hexo之前需要准备一些东西，也就是需要安装一些我们必需的。 安装安装所需安装Hexo相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git npm 如果npm运行出错就安装cnpm国内镜像 如果没有安装那么就需要安装咯，大家可以看看Vue-cli项目创建如何检查Node.js、Git和cnpm是否安装成功。 安装Hexo所有必备的应用程序安装完成后，即可使用npm或者cnpm来安装Hexo。打开Git Bash Here输入： 1npm install -g hexo-cli 检查是否安装Hexo完成,查询是否成功，显示hexo-cli版本就说明成功了 1hexo -V 建站安装一切所需的程序后，我们可以开始建站了，就是创建我们的博客,大家也可以进入Hexo建站官网查看。新建一个文件夹，来管理我们的博客项目，请执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。 运行命令123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 注：folder是表示建站的博客项目名 打开Git Bash Here，输入： 1hexo init myblog 再运行以下命令：myblog是我创建博客站。12cd myblognpm install 访问URL我们可以运行看看Hexo创建的博客站是什么样的，运行以下命令 1hexo s 访问URL 1http://localhost:4000/ 好了，到这里你已经学会了通过Hexo创建博客了，接下来我们将会分析如何将我们的博客上传到我们的GitHub服务器上 上传到GitHubGitHub创建repositories进入GitHub官网,或者在浏览器输入https://github.com/,如果还没有账号就创建一个账号就好了，这里不教大家怎么注册账号了。登录自己的账号，直接点击new repositories或者进入You repositories再new repositories 进入到创建repositories页面来,这里很重要，一定要注意哦！必须将新建的repository的名字为: You account name.github.io。其他默认就好了 配置 注：repository: https://github.com/name/name.github.io.git 是自己刚刚创建You account name.github.io 的repository，在Clone with HTTPS里面，复制粘贴就好咯。冒号后面记得空格哦。branch 后面是master就好了。 GitHub的Repository创建好后。我们在回到本地的Hexo的Myblog项目中,找到在项目的根目录下_config.yml找到 deploy标签 在该文件下面添加 1234deploy: type: git repository: https://github.com/name/name.github.io.git #复制过来 branch: master 在_config.yml找到url进行修改为： 1url: http://name.github.io #假设name是我的账号，修改为自己的账号 部署到这里就差不到了，接下来我们需要执行一些命令，将我们的博客部署到GitHub上了，惊喜将会到来了。打开Git Bash Here进入myblog根目录下，首先我们需要安装一下hexo-deployer-git不然可能出现错误，无法部署成功，执行命令行。 1npm install hexo-deployer-git --save 然后在执行以下命令: 注：每次提交时必须执行这三个命令 123hexo cleanhexo generatehexo deploy 或者简写方式 123hexo cleanhexo ghexo d 测试我们进行访问https://name.github.io/和 http://localhost:4000/一样的页面说明是已经成功。 总结我们已经从如何使用Hexo到部署上GitHub上。需要我们对一些命令行的操作，还有一些需要我们必须注意的，一定要小心，不然就出错了。]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Repositories</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx 配置 HTTPS]]></title>
    <url>%2F2018%2F12%2F31%2Fnginxsethttps%2F</url>
    <content type="text"><![CDATA[Nginx 配置 HTTPS 配置文件基本如下，请参考并进行相应的修改 123456789101112131415161718192021222324server &#123; listen 80; server_name domain.example.com ; #修改为自己的域名 rewrite ^(.*)`$ https://$`host$1 permanent; &#125;server &#123; listen 443; server_name domain.example.com; #修改为自己的域名 ssl on; root html; #html修改为网站的对应路径 index index.html index.htm; ssl_certificate cert/yourcrt.pem; #将证书添加到相应的文件夹 ssl_certificate_key cert/yourkey.key; #将密钥添加到相应的文件夹 ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / &#123; root html; #html修改为网站的对应路径 index index.html index.htm; &#125;&#125;]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos 设置静态 IP 联网]]></title>
    <url>%2F2018%2F12%2F31%2Fcentossetstaticnetwork%2F</url>
    <content type="text"><![CDATA[Centos 设置静态 IP 联网 第一步，我们进入/etc/sysconfig/network-scripts目录，查看该目录有没有形如ifcfg-XXX的文件： 如果你看不到以ifcfg-打头的文件（ifcfg-lo除外），说明网卡设备没有被正确识别，可能是你下载的centos镜像版本和你安装centos时选择的centos版本不一致，比如，centos镜像是64位的，却按照32位来安装。（ 建议重装 下面进行第二步： 在VMware里，依次点击”编辑“ - ”虚拟网络编辑器“，如下图，我选择的是NAT模式： 在这个界面接着点”NAT设置”，查看虚拟机的网关，这个网关在第三步要用。 第三步： 以root权限编辑/etc/sysconfig/network-scripts/ifcfg-ens33 #这边对应你自己的文件名 箭头指向的都修改位相应的模式 下方属性为对应添加的1234IPADDR=192.168.152.127 #设置时查看虚拟网络编辑器VMnet8下的DHCP设置，从起始IP地址开始分配GATEWAY=192.168.152.2 #刚刚前面查看的NAT设置的网关地址NETMASK=255.255.255.0 #这是子网掩码DNS1=114.114.114.114 #给服务器设置一个DNS服务器，这个为公用的一个服务器 最后重启网络配置1sevice network restart]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
