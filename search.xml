<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Github 搭建 Hexo 博客]]></title>
    <url>%2F2019%2F01%2F16%2Fhexo%2F</url>
    <content type="text"><![CDATA[简介本篇文章主要讲解Hexo在GitHub上搭建博客接下来让我们一起进入Hexo搭建博客学习吧。 Hexo什么是Hexo？Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 当我们在遇到一个新东西的时候，进入其官网能帮助我们解决很多问题。关于什么是Hexo？还有一些关于Hexo的问题，大家进入Hexo官网进行查看。 如何使用我们在使用Hexo之前需要准备一些东西，也就是需要安装一些我们必需的。 安装安装所需安装Hexo相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git npm 如果npm运行出错就安装cnpm国内镜像 如果没有安装那么就需要安装咯，大家可以看看Vue-cli项目创建如何检查Node.js、Git和cnpm是否安装成功。 安装Hexo所有必备的应用程序安装完成后，即可使用npm或者cnpm来安装Hexo。打开Git Bash Here输入： 1npm install -g hexo-cli 检查是否安装Hexo完成,查询是否成功，显示hexo-cli版本就说明成功了 1hexo -V 建站安装一切所需的程序后，我们可以开始建站了，就是创建我们的博客,大家也可以进入Hexo建站官网查看。新建一个文件夹，来管理我们的博客项目，请执行下列命令，Hexo将会在指定文件夹中新建所需要的文件。 运行命令123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 注：folder是表示建站的博客项目名 打开Git Bash Here，输入： 1hexo init myblog 再运行以下命令：myblog是我创建博客站。12cd myblognpm install 访问URL我们可以运行看看Hexo创建的博客站是什么样的，运行以下命令 1hexo s 访问URL 1http://localhost:4000/ 好了，到这里你已经学会了通过Hexo创建博客了，接下来我们将会分析如何将我们的博客上传到我们的GitHub服务器上 上传到GitHubGitHub创建repositories进入GitHub官网,或者在浏览器输入https://github.com/,如果还没有账号就创建一个账号就好了，这里不教大家怎么注册账号了。登录自己的账号，直接点击new repositories或者进入You repositories再new repositories 进入到创建repositories页面来,这里很重要，一定要注意哦！必须将新建的repository的名字为: You account name.github.io。其他默认就好了 配置GitHub的Repository创建好后。我们在回到本地的Hexo的Myblog项目中,找到在项目的根目录下_config.yml找到 deploy标签 在该文件下面添加 注：repository: https://github.com/name/name.github.io.git 是自己刚刚创建You account name.github.io 的repository，在Clone with HTTPS里面，复制粘贴就好咯。冒号后面记得空格哦。branch 后面是master就好了。 1234deploy: type: git repository: https://github.com/name/name.github.io.git #复制过来 branch: master 在_config.yml找到url进行修改为： 1url: http://name.github.io #假设name是我的账号，修改为自己的账号 部署到这里就差不到了，接下来我们需要执行一些命令，将我们的博客部署到GitHub上了，惊喜将会到来了。打开Git Bash Here进入myblog根目录下，首先我们需要安装一下hexo-deployer-git不然可能出现错误，无法部署成功，执行命令行。 1npm install hexo-deployer-git --save 然后在执行以下命令: 注：每次提交时必须执行这三个命令 123hexo cleanhexo generatehexo deploy 或者简写方式 123hexo cleanhexo ghexo d 测试我们进行访问https://name.github.io/和 http://localhost:4000/一样的页面说明是已经成功。 总结我们已经从如何使用Hexo到部署上GitHub上。需要我们对一些命令行的操作，还有一些需要我们必须注意的，一定要小心，不然就出错了。]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>Repositories</tag>
        <tag>Github</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx 配置 HTTPS]]></title>
    <url>%2F2018%2F12%2F31%2Fnginxsethttps%2F</url>
    <content type="text"><![CDATA[配置文件基本如下，请参考并进行相应的修改 123456789101112131415161718192021222324server &#123; listen 80; server_name domain.example.com ; #修改为自己的域名 rewrite ^(.*)`$ https://$`host$1 permanent; &#125;server &#123; listen 443; server_name domain.example.com; #修改为自己的域名 ssl on; root html; #html修改为网站的对应路径 index index.html index.htm; ssl_certificate cert/yourcrt.pem; #将证书添加到相应的文件夹 ssl_certificate_key cert/yourkey.key; #将密钥添加到相应的文件夹 ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / &#123; root html; #html修改为网站的对应路径 index index.html index.htm; &#125;&#125;]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos 设置静态 IP 联网]]></title>
    <url>%2F2018%2F12%2F31%2Fcentossetstaticnetwork%2F</url>
    <content type="text"><![CDATA[第一步，我们进入/etc/sysconfig/network-scripts目录，查看该目录有没有形如ifcfg-XXX的文件： 如果你看不到以ifcfg-打头的文件（ifcfg-lo除外），说明网卡设备没有被正确识别，可能是你下载的centos镜像版本和你安装centos时选择的centos版本不一致，比如，centos镜像是64位的，却按照32位来安装。（ 建议重装 下面进行第二步： 在VMware里，依次点击”编辑“ - ”虚拟网络编辑器“，如下图，我选择的是NAT模式： 在这个界面接着点”NAT设置”，查看虚拟机的网关，这个网关在第三步要用。 第三步： 以root权限编辑/etc/sysconfig/network-scripts/ifcfg-ens33 #这边对应你自己的文件名 箭头指向的都修改位相应的模式 下方属性为对应添加的1234IPADDR=192.168.152.127 #设置时查看虚拟网络编辑器VMnet8下的DHCP设置，从起始IP地址开始分配GATEWAY=192.168.152.2 #刚刚前面查看的NAT设置的网关地址NETMASK=255.255.255.0 #这是子网掩码DNS1=114.114.114.114 #给服务器设置一个DNS服务器，这个为公用的一个服务器 最后重启网络配置1sevice network restart]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
